# Xcode
#
# gitignore contributors: remember to update Global/Xcode.gitignore, Objective-C.gitignore & Swift.gitignore

## User settings
xcuserdata/

## compatibility with Xcode 8 and earlier (ignoring not required starting Xcode 9)
*.xcscmblueprint
*.xccheckout

## compatibility with Xcode 3 and earlier (ignoring not required starting Xcode 4)
build/
DerivedData/
*.moved-aside
*.pbxuser
!default.pbxuser
*.mode1v3
!default.mode1v3
*.mode2v3
!default.mode2v3
*.perspectivev3
!default.perspectivev3

## Obj-C/Swift specific
*.hmap

## App packaging
*.ipa
*.dSYM.zip
*.dSYM

## Playgrounds
timeline.xctimeline
playground.xcworkspace

# Swift Package Manager
#
# Add this line if you want to avoid checking in source code from Swift Package Manager dependencies.
# Packages/
# Package.pins
# Package.resolved
# *.xcodeproj
#
# Xcode automatically generates this directory with a .xcworkspacedata file and xcuserdata
# hence it is not needed unless you have added a package configuration file to your project
# .swiftpm

.build/
.build/**

# CocoaPods
#
# We recommend against adding the Pods directory to your .gitignore. However
# you should judge for yourself, the pros and cons are mentioned at:
# https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control
#
# Pods/
#
# Add this line if you want to avoid checking in source code from the CocoaPod.
# Note: it is generally recommended to not store the Pods directory in VCS.

# Carthage
#
# Add this line if you want to avoid checking in source code from Carthage dependencies.
# Carthage/Checkouts

Carthage/Build/

# Accio dependency management
Dependencies/
.accio/

# fastlane
#
# It is recommended to not store the screenshots in the git repo.
# Instead, use fastlane to re-generate the screenshots whenever they are needed.
# For more information about the fastlane concept, see https://docs.fastlane.tools
# and https://docs.fastlane.tools/best-practices/source-control/#source-control

fastlane/report.xml
fastlane/Preview.html
fastlane/screenshots/**/*.png
fastlane/test_output

# Code Injection
#
# After new code Injection tools there's a generated folder /iOSInjectionProject
# https://github.com/johnno1962/injectionforxcode

iOSInjectionProject/

# macOS
.DS_Store

# Health Export App Specific
# Don't commit actual exported health data files
*.json
*.db
*.sqlite
*.sqlite3

# Temporary files
*.tmp
*.temp

# Logs
*.log

# IDE files
.vscode/
.idea/

# Backup files
*~
*.backup
*.bak

# OS generated files
Thumbs.db

# CI/CD and Build Artifacts
# Local build outputs
build/
export/
*.xcarchive
*.xcarchive/
DerivedData/

# Code Signing (CRITICAL - Never commit these!)
*.p12
*.mobileprovision
*.provisionprofile
*.cer
*.p8
AuthKey_*.p8
*.certSigningRequest

# Environment and secrets
.env
.env.local
.env.*.local
secrets/
*.pem
*.key
private_keys/

# GitHub Actions artifacts (if downloaded locally)
.github/artifacts/

# App Store metadata (keep the structure, ignore sensitive data)
AppStore/private/
AppStore/*.p8
AppStore/AuthKey_*

# SwiftLint artifacts
.swiftlint-cache/

# Xcode Cloud
*.xctestplan

# TestFlight and App Store Connect
*.app
*.ipa.zip
ExportOptions.plist

# Simulator specific
*.app.dSYM/

# Crash logs
crash_*.log
*.crash

# Memory profiling
*.memgraph

# Network traces
*.trace

# Performance tests
*.trace
*.dtps

# Local configuration overrides
config.local.json
settings.local.json

# Health data samples (for testing - never commit real data!)
test_data/real_samples/
sample_exports/
health_data_*.json
health_data_*.db

# Documentation artifacts
docs/build/
*.pdf.tmp

# Temporary Xcode files
*.xcuserstate
*.xcworkspace/xcshareddata/swiftpm/Package.resolved.backup

# IDE plugin files
.swiftpm/xcode/

# macOS extended attributes
._*